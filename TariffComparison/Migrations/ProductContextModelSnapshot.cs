// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TariffComparison.DbModel;

#nullable disable

namespace TariffComparison.Migrations
{
    [DbContext(typeof(ProductContext))]
    partial class ProductContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("TariffComparison.DbModel.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ConsumptionCosts")
                        .HasColumnType("TEXT");

                    b.Property<int>("InclidedInPackage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PackageCosts")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductType")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("UnconditionalCosts")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ConsumptionCosts = 0.22m,
                            InclidedInPackage = 0,
                            Name = "Basic electricity tariff",
                            PackageCosts = 0m,
                            ProductType = 1,
                            UnconditionalCosts = 5m
                        },
                        new
                        {
                            ProductId = 2,
                            ConsumptionCosts = 0.3m,
                            InclidedInPackage = 4000,
                            Name = "Packaged tariff",
                            PackageCosts = 800m,
                            ProductType = 2,
                            UnconditionalCosts = 0m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
